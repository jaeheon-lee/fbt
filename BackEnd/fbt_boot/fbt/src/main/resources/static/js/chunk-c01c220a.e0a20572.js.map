{"version":3,"sources":["webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts"],"names":["name","props","active","type","default","activeClass","this","chipGroup","close","closeIcon","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","computed","classes","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","methods","click","genFilter","children","$createElement","staticClass","left","genClose","right","size","on","e","genContent","$slots","render","tabindex","setBackgroundColor","color","h","setTextColor","baseMixins","mixins","allowOverflow","light","dark","maxWidth","Number","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","activator","top","bottom","width","height","offsetTop","scrollHeight","offsetLeft","content","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","stackMinZIndex","computedLeft","a","c","activatorLeft","attach","Math","isNaN","parseInt","computedTop","hasActivator","$scopedSlots","watch","val","isActive","beforeMount","window","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","genActivatorListeners","listeners","onClick","getInnerHeight","document","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","requestAnimationFrame","cb","startTransition","Promise","resolve","updateDimensions","provide","isInMenu","theme","directives","ClickOutside","Resize","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","offsetX","offsetY","openOnHover","origin","transition","calculatedTopAuto","defaultOffset","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","parseFloat","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","find","tile","styles","transformOrigin","activeZIndex","next","prev","classList","remove","$attrs","hasOwnProperty","mounted","calcScrollPosition","$el","$refs","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","closeConditional","target","contains","genActivatorAttributes","attributes","id","genTransition","genDirectives","handler","include","options","attrs","role","class","menuable__content__active","contentClass","ref","keydown","onKeyDown","$listeners","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","setTimeout","onResize","clearTimeout","arg","showLazyContent","root"],"mappings":"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","file":"js/chunk-c01c220a.e0a20572.js","sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n"],"sourceRoot":""}