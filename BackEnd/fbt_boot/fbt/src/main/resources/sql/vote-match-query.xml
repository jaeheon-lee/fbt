<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="VoteMatchMapper">
	<!-- V001 : 진행 중인 투표 출력 -->
	<!-- 정보를 받기 위한 RM -->
	<resultMap type="voteMatch" id="VoteMatchRM">
		<id column="vote_match_id" property="voteMatchId"/>
		<result column="vote_reg_date" property="voteRegDate"/>
		<result column="due_date" property="dueDate"/>
		<result column="contents" property="contents"/>
		<association property="matchSchedule" javaType="matchSchedule">
			<result column="start_time" property="startTime"/>
			<result column="duration" property="duration"/>
			<result column="stadium_address" property="stadiumAddress"/>
			<result column="match_type" property="matchType"/>
			<result column="cost" property="cost"/>
			<result column="stadium_parking" property="stadiumParking"/>
		</association>
		<association property="voteMatchSetting" javaType="voteMatchSetting">
			<result column="friend_emp" property="friendEmp"/>
		</association>
		<collection property="VoteMatchResults" ofType="VoteMatchResult">
			<result column="attendance" property="attendance"/>
			<result column="team_member_id" property="attendance"/>
			<result column="total_num" property="totalNum"/>
		</collection>
	</resultMap>
	<!-- 투표 관련 일정 정보 -->
	<!-- <select id="showVoteMatchInfoByTeam" parameterType="integer" resultMap="VoteMatchRM">
		SELECT 
		v.vote_match_id, v.vote_reg_date, v.due_date, v.contents,
		m.start_time, m.duration, m.stadium_address, m.match_type,
		m.cost, m.stadium_parking
		FROM match_schedule m
		JOIN vote_match v
		ON v.match_schedule_id = m.match_schedule_id
		WHERE v.vote_status = 0
		AND v.team_id = #{value}
	</select> -->
	<!-- 투표 관련 인원 정보 -->
	<!-- <select id="showVoteMatchStatusByTeam" parameterType="integer" resultMap="VoteMatchResultRM">
		SELECT 
		v.vote_match_id, vr.attendance, vr.team_member_id, 
		tm.totalNum,
		vs.type, vs.friend_emp
		FROM vote_match v
		JOIN vote_match_result vr
		ON v.vote_match_id = vr.vote_match_id
		JOIN (
		select count(team_id) totalNum
		from team_member
		where team_id = #{value}
		) tm
		join vote_match_setting vs
		on v.vote_match_id = vs.vote_match_id
		WHERE v.vote_status = 0
		AND v.team_id = #{value}
	</select> -->
	<!-- 투표 관련 일정|인원 정보 -->
	<select id="showVoteMatchInfoByTeam" parameterType="Integer" resultMap="VoteMatchRM" >
		SELECT 
		v.vote_match_id, v.vote_reg_date, v.due_date,  
		m.start_time, m.duration, m.stadium_address, m.match_type,
		m.cost, m.stadium_parking, m.content,
		vr.attendance, vr.team_member_id, tm.total_num,
		vs.type, vs.friend_emp
		FROM match_schedule m
		JOIN vote_match v
		ON v.match_schedule_id = m.match_schedule_id
		LEFT OUTER join vote_match_result vr
		on v.vote_match_id = vr.vote_match_id
		join (
		select team_id, count(team_id) total_num
		from team_member
		where team_id =#{value}
		) tm
		on tm.team_id=v.team_id
		join vote_match_setting vs
		on v.vote_match_id = vs.vote_match_id
		where v.vote_status = 0
		and v.team_id = #{value};
	</select>
	
	<!-- V003 : 참불 입력하기 -->
	<insert id="" ></insert>

	<!-- V005 : 투표 생성하기 -->
	<insert id="addVoteMatch" parameterType="voteMatch">
		INSERT INTO
		vote_match(vote_match_id, contents, due_date, vote_status, vote_reg_date, writer, team_id, match_schedule_id)
		VALUES(#{voteMatchId}, #{contents}, #{dueDate}, #{voteStatus}, sysdate(), #{writer}, #{team.teamId}, 
		#{matchSchedule.matchScheduleId})
	</insert>
	
	<!-- V006 : 투표 설정 등록 -->
	<insert id="addVoteMatchSetting" parameterType="voteMatchSetting">
		INSERT INTO 
		vote_match_setting(vote_match_id, type, cancel_number, is_first, waiting, friend_emp, self_min_number, 
		self_max_number, emp_due_date, emp_min_number, away_min_number, away_due_date, assign_cost, emp_cost, search_cost)
		VALUES(#{voteMatchId}, #{type}, #{cancelNumber}, #{isFirst}, #{waiting}, #{friendEmp}, #{selfMinNumber},
		#{selfMaxNumber}, #{empDueDate}, #{empMinNumber}, #{awayMinNumber}, #{awayDueDate}, #{assgignCost}, 
		#{empCost}, #{searchCost})
	</insert>
	
</mapper>