<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AssignmentMapper">
	<!-- A001: 양도 등록 -->
	<insert id="addAssignment" parameterType="assignment">
		INSERT INTO
		assignment(team_id_giver, match_schedule_id, team_member_id, reg_date, due_date, content)
		VALUES(#{teamGiver.teamId}, #{matchSchedule.matchScheduleId}, #{teamMember.teamMemberId},
		 sysdate(), #{dueDate}, #{content})
	</insert>
	
	<!-- A002 양도 출력 -->
	<!-- RM -->
	<resultMap type="assignment" id="assignmentRM">
		<id column="assignment_id" property="assignmentId"/>
		<result column="reg_date" property="regDate"/>
		<result column="due_date" property="dueDate"/>
		<result column="content" property="content"/>
		<association property="teamGiver" javaType="team">
			<id column="team_id" property="teamId"/>
			<result column="team_name" property="teamName"/>
			<result column="emblem" property="emblem"/>
		</association>
		<association property="teamMember" javaType="teamMember">
			<id column="giver_writer" property="teamMemberId"/>
		</association>
		<association property="matchSchedule" javaType="matchSchedule">
			<id column="match_schedule_id" property="matchScheduleId"/>
			<result column="start_time" property="startTime"/>
			<result column="duration" property="duration"/>
			<result column="stadium_address" property="stadiumAddress"/>
			<result column="stadium_name" property="stadiumName"/>
			<result column="match_type" property="matchType"/>
			<result column="stadium_shower" property="stadiumShower"/>
			<result column="stadium_type" property="stadiumType"/>
			<result column="end_time" property="endTime"/>
			<result column="cost" property="cost"/>
			<result column="stadium_parking" property="stadiumParking"/>
			<result column="stadium_x" property="stadiumX"/>
			<result column="stadium_y" property="stadiumY"/>
			<association property="homeTeam" javaType="team">
				<id column="home_team_id" property="teamId"/>
				<result column="team_name" property="teamName"/>
				<result column="emblem" property="emblem"/>
			</association>
			<association property="awayTeam" javaType="team">
				<id column="away_team_id" property="teamId"/>
				<result column="team_name2" property="teamName"/>
				<result column="emblem2" property="emblem"/>
			</association>
		</association>
		<collection property="assignmentReservations" javaType="java.util.ArrayList" ofType="assignmentReservation">
			<id column="assignment_res_id" property="asssignmetResId"/>
			<result column="res_assignment_id" property="assignmentId"/>
			<result column="reservation_status" property="reservationStatus"/>
			<association property="teamTaker" javaType="team">
				<id column="team_id_taker" property="teamId"/>
			</association>
			<association property="teamMember" javaType="teamMember">
				<id column="team_member_id" property="teamMemberId"/>
			</association>
		</collection>
	</resultMap>
	
	<!-- 공통쿼리 -->
	<!-- 기본: 양도 중일 때 | 양도 실패 시 불러올 데이터 -->
	<sql id="showAssignmentFactorBasic">
		SELECT
		a.assignment_id, a.reg_date, a.due_date, a.content, a.team_member_id giver_writer,
		m.match_schedule_id, m.start_time, m.duration, m.stadium_address, m.stadium_name, 
		m.match_type, m.stadium_shower, m.stadium_type,
		date_add(m.start_time, interval m.duration hour) end_time,
		m.cost, m.stadium_parking, m.stadium_x, m.stadium_y, m.home_team_id, m.away_team_id,
		t.team_id, t.team_name, t.emblem,
		t2.team_name team_name2, t2.area area2, t2.emblem emblem2
	</sql>
	<!-- 기본: 양도 중일 때 | 양도 실패 시 조인 테이블 -->
	<sql id="showAssignmentJoinBasic">
		FROM assignment a
		JOIN match_schedule m
		ON a.match_schedule_id = m.match_schedule_id
		JOIN team t4
		ON a.team_id_giver = t4.team_id
		JOIN team t
		ON m.home_team_id = t.team_id
		LEFT OUTER JOIN team t2
		ON m.away_team_id = t2.team_id
	</sql>
	<!-- 추가: 양도신청했을 때 불러올 데이터 -->
	<sql id="showAssignmentFactorApplied">
		ar.assignment_res_id, ar.assignment_id res_assignment_id, ar.team_id_taker, 
		ar.team_member_id, ar.reservation_status
	</sql>
	<!-- 추가: 양도신청했을 때 조인 테이블 -->
	<sql id="showAssignmentJoinApplied">
		LEFT OUTER JOIN assignment_reservation ar
		ON a.assignment_id = ar.assignment_id
	</sql>
	
	<!-- A002-1: 팀별 양도 중 or 양도 실패 등록 매치 출력 -->
	<!-- 해당 양도에서 신청이 없다 => 양도 중 || 해당 양도 신청 중 완료가 되지 않았다 -->
	<select id="showRegisteredAssignByTeam" parameterType="hashMap" resultMap="assignmentRM">
		<include refid="showAssignmentFactorBasic"/>
		<include refid="showAssignmentJoinBasic"/>
		<where>
			a.team_id_giver = #{teamIdGiver}
			<if test="status == 1">
				AND a.assignment_id NOT IN (
					SELECT assignment_id 
					FROM assignment_reservation
				)
				AND due_date > sysdate()
			</if>
			<if test="status == 0">
				AND a.assignment_id NOT IN (
					SELECT assignment_id 
					FROM assignment_reservation 
					WHERE reservation_status = 2
				)
				AND sysdate() > due_date
			</if>
		</where>
		
	</select>
	<!-- A002-2: 팀별 양도신청/중 등록 or 신청 매치 출력 -->
	<select id="showRegisteredAssignAppliedByTeam" parameterType="hashMap" resultMap="assignmentRM">
		<include refid="showAssignmentFactorBasic"/>,
		<include refid="showAssignmentFactorApplied"/>
		<include refid="showAssignmentJoinBasic"/>
		<include refid="showAssignmentJoinApplied"/>
		<where>
			<if test="isApply == 0">
				a.team_id_giver = #{teamIdGiver}
					<if test="reservationStatus == 0">
						AND reservation_status IN (0, -1) 
						AND a.assignment_id NOT IN (
							SELECT assignment_id 
							FROM assignment_reservation
							WHERE reservation_status IN (1, 2)
						)
						AND due_date > sysdate()
					</if>
					<if test="reservationStatus == 1">
						AND a.assignment_id IN (
							SELECT assignment_id 
							FROM assignment_reservation
							WHERE reservation_status = 1
						) 
					</if>
			</if>
			<if test="isApply == 1">
				ar.reservation_status = #{reservationStatus}
				AND ar.team_id_taker = #{teadTakerId}
				<if test="reservationStatus == 0">
					AND due_date > sysdate()
				</if>
			</if>
		</where>
	</select>
	<!-- A002-3: Id로 assignmet와 그 신청 결과 가져오가 -->
	<select id="getAssignmentById" parameterType="integer" resultMap="assignmentRM">
		<include refid="showAssignmentFactorBasic"/>,
		<include refid="showAssignmentFactorApplied"/>
		<include refid="showAssignmentJoinBasic"/>
		<include refid="showAssignmentJoinApplied"/>
		WHERE a.assignment_id = #{value}
	</select>
	
	<!-- A003: 양도검색 -->
	<select id="searchAssignmentByFilter" parameterType="filter" resultMap="assignmentRM">
		<include refid="showAssignmentFactorBasic"/>,
		<include refid="showAssignmentFactorApplied"/>
		<include refid="showAssignmentJoinBasic"/>
		<include refid="showAssignmentJoinApplied"/>
		<where>
		m.start_time > sysdate() 
			<!-- 경기일 -->
			<if test="date != null">
				AND m.start_time LIKE "${date}%"
			</if>
			<!-- 경기일시 -->
			<if test="dateTime1 != null or dateTime1 != null">
				AND ( 
				#{dateTime1} between m.start_time and date_add(m.start_time, interval m.duration hour)
				OR
				#{dateTime2} between m.start_time and date_add(m.start_time, interval m.duration hour)
				)
			</if>
			<!-- 경기장 주소 -->
			<if test="stadiumAddress != null">
				AND m.stadium_address LIKE "${stadiumAddress}%"
			</if>
			<!-- 경기장 이름 -->
			<if test="stadiumName != null">
				AND m.stadium_name LIKE "%${stadiumName}%"
			</if>
			<!-- 경기 타입 -->
			<if test="matchType != null">
				AND m.match_type = #{matchType}
			</if>
			<!-- 경기장 타입 -->
			<if test="stadiumType != null">
				AND m.stadium_type = #{stadiumType}
			</if>
			<!-- 비용유무 -->
			<if test="costType == -1">
			</if>
			<if test="costType == 0">
				AND m.cost = #{costType}
			</if>
			<if test="costType == 1">
				AND m.cost > 0
			</if>
		</where>
		<!-- 정렬 -->
		<!-- 최신순 -->
		<if test="order == 0">
			ORDER BY a.reg_date DESC
		</if>
		<!-- 실력순 -->
		<if test="order == 1">
			ORDER BY t4.team_ability DESC
		</if>
		<!-- 매너순 -->
		<if test="order == 2">
			ORDER BY t4.team_manner DESC
		</if>
	</select>
	
	<!-- A004: 양도 신청 -->
	<insert id="doApplyAssignment" parameterType="assignmentReservation">
		INSERT INTO 
		assignment_reservation(assignment_id, team_id_taker, team_member_id, reservation_status)
		VALUES(#{assignmentId},#{teamTaker.teamId},#{teamMember.teamMemberId}, 0)
	</insert>
	
	<!-- A005: 신청 양도 단계 수정 -->
	<update id="updateResStatus" parameterType="assignmentReservation">
		UPDATE assignment_reservation
		SET reservation_status = #{reservationStatus}
		WHERE assignment_id = #{assignmentId}
		AND team_id_taker = #{teamTaker.teamId}
	</update>
	
	<!-- A006: 양도글 삭제 -->
	<delete id="deleteAssignment" parameterType="integer">
		DELETE FROM assignment WHERE assignment_id = #{value} 
	</delete>
	
	<!-- A007: 양도글 끌어올리기 -->
	<update id="renewAssign" parameterType="integer">
		UPDATE assignment
		SET reg_date = sysdate()
		WHERE assignment_id = #{value}
	</update>
	
	<!-- A008: 신청 양도 삭제 -->
	<delete id="deleteAssignRes" parameterType="hashMap">
		DELETE FROM assignment_reservation 
		WHERE assignment_id = #{assignmentId}
		AND team_id_taker = #{teamTakerId}
	</delete>
	
	<!-- A010: 양도글 수정하기 -->
	<update id="updateAssignment" parameterType="assignment">
		UPDATE assignment
		SET
		reg_date = #{regDate},
		due_date = #{dueDate},
		content = #{content}
		WHERE assignment_id = #{assignmentId};
	</update>
	<!-- A011: 나머지 신청 양도 상태 실패로 변경 -->
	<update id="failAssign" parameterType="hashMap">
		UPDATE assignment_reservation
		SET reservation_status = -1
		WHERE assignment_id = #{assignmentId}
		AND team_id_taker != #{takerTeamId}
	</update>
</mapper>