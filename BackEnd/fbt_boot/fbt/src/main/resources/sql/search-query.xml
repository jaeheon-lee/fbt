<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SearchMapper">
	<!-- M001: 매치 등록 -->
	<insert id="addSearch" parameterType="search">
		INSERT INTO
		search(team_id_giver, match_schedule_id, team_member_id, search_reg_date, waiting_time, min_number, due_date, content)
		VALUES(#{teamGiver.teamId}, #{matchSchedule.matchScheduleId}, #{teamMember.teamMemberId},
		 sysdate(), #{waitingTime}, #{minNumber}, #{dueDate}, #{content})
	</insert>
	<!-- M003, M002-1, M002-2  공통부분 -->
		<!-- RM -->
		<resultMap type="search" id="searchRM">
			<id column="search_id" property="searchId"/>
			<result column="search_reg_date" property="searchRegDate"/>
			<result column="waiting_time" property="waitingTime"/>
			<result column="min_number" property="minNumber"/>
			<result column="due_date" property="dueDate"/>
			<result column="content" property="content"/>
			<association property="teamGiver" javaType="team">
				<id column="team_id" property="teamId"/>
				<result column="team_name" property="teamName"/>
				<result column="emblem" property="emblem"/>
			</association>
			<association property="teamMember" javaType="teamMember">
				<id column="giver_writer" property="teamMemberId"/>
			</association>
			<association property="matchSchedule" javaType="matchSchedule">
				<id column="match_schedule_id" property="matchScheduleId"/>
				<result column="start_time" property="startTime"/>
				<result column="duration" property="duration"/>
				<result column="stadium_address" property="stadiumAddress"/>
				<result column="stadium_name" property="stadiumName"/>
				<result column="match_type" property="matchType"/>
				<result column="stadium_shower" property="stadiumShower"/>
				<result column="stadium_type" property="stadiumType"/>
				<result column="end_time" property="endTime"/>
				<result column="cost" property="cost"/>
				<result column="stadium_parking" property="stadiumParking"/>
				<result column="stadium_x" property="stadiumX"/>
				<result column="stadium_y" property="stadiumY"/>
				<association property="homeTeam" javaType="team">
					<id column="home_team_id" property="teamId"/>
					<result column="team_name" property="teamName"/>
					<result column="emblem" property="emblem"/>
				</association>
				<association property="awayTeam" javaType="team">
					<id column="away_team_id" property="teamId"/>
					<result column="team_name2" property="teamName"/>
					<result column="emblem2" property="emblem"/>
				</association>
			</association>
			<collection property="searchReservations" javaType="java.util.ArrayList" ofType="SearchReservation">
				<id column="search_res_id" property="searchResId"/>
				<result column="res_search_id" property="searchId"/>
				<result column="writer" property="writer"/>
				<result column="reservation_status" property="reservationStatus"/>
				<association property="teamTaker" javaType="team">
					<id column="team_id_taker" property="teamId"/>
				</association>
				<association property="teamMember" javaType="teamMember">
					<result column="team_member_id" property="teamMemberId"/>
				</association>
			</collection>
		</resultMap>
		
		<!-- 공통쿼리 -->
		<!-- 기본: 매치 중일 때 불러올 데이터 -->
		<sql id="showSearchFactorBasic">
			SELECT
			s.search_id, s.search_reg_date, s.waiting_time, s.min_number, s.due_date, s.content, 
			s.team_member_id giver_writer,
			m.match_schedule_id, m.start_time, m.duration, m.stadium_address, m.stadium_name, 
			m.match_type, m.stadium_shower, m.stadium_type,
			date_add(m.start_time, interval m.duration hour) end_time,
			m.cost, m.stadium_parking, m.stadium_x, m.stadium_y, m.home_team_id, m.away_team_id,
			t.team_id, t.team_name, t.emblem,
			t2.team_name team_name2, t2.area area2, t2.emblem emblem2
		</sql>
		<!-- 기본: 매치 중일 때 조인 테이블 -->
		<sql id="showSearchJoinBasic">
			FROM search s
			JOIN match_schedule m
			ON s.match_schedule_id = m.match_schedule_id
			JOIN team t4
			ON s.team_id_giver = t4.team_id
			JOIN team t
			ON s.team_id_giver = t.team_id
			LEFT OUTER JOIN team t2
			ON m.away_team_id = t2.team_id
		</sql>
		<!-- 추가: 인원파악신청했을 때 불러올 데이터 -->
		<sql id="showSearchFactorApplied">
			sr.search_res_id, sr.search_id res_search_id, sr.team_id_taker, 
			sr.team_member_id, sr.reservation_status
		</sql>
		<!-- 추가: 인원파악신청했을 때 조인 테이블 -->
		<sql id="showSearchJoinApplied">
			LEFT OUTER JOIN search_reservation sr
			ON s.search_id = sr.search_id
		</sql>
	<!-- M002-1, M002-2, M003  공통부분 끝 -->
	
	<!-- M002-1: 팀별 매치 중 or 매치 실패 등록 매치 출력 -->	
	<select id="showRegisteredSearchByTeam" parameterType="hashMap" resultMap="searchRM">
		<include refid="showSearchFactorBasic"/>
		<include refid="showSearchJoinBasic"/>
		<where>
			s.team_id_giver = #{teamIdGiver}
			<if test="status == 1">
				AND s.search_id NOT IN (
					SELECT search_id 
					FROM search_reservation
				)
				AND due_date > sysdate()
			</if>
			<if test="status == 0">
				AND s.search_id NOT IN (
					SELECT search_id 
					FROM search_reservation 
					WHERE reservation_status = 2
				)
				AND sysdate() > due_date
			</if>
		</where>
		
	</select>
	<!-- M002-2: 팀별 인원파악신청/중 등록 or 신청 매치 출력 -->
	<select id="showRegisteredSearchAppliedByTeam" parameterType="hashMap" resultMap="searchRM">
		<include refid="showSearchFactorBasic"/>,
		<include refid="showSearchFactorApplied"/>
		<include refid="showSearchJoinBasic"/>
		<include refid="showSearchJoinApplied"/>
		<where>
			<if test="isApply == 0">
			s.team_id_giver = #{teamIdGiver}
				<if test="reservationStatus == 0">
					AND reservation_status IN (0, 1, -1) 
					AND s.search_id NOT IN (
						SELECT search_id 
						FROM search_reservation
						WHERE reservation_status = 2
					)
					AND due_date > sysdate() 
				</if>
				<if test="reservationStatus == 1">
					AND reservation_status = 1
					AND s.search_id NOT IN (
						SELECT search_id 
						FROM search_reservation
						WHERE reservation_status = 2
					)
					AND due_date > sysdate() 
				</if>
				<if test="reservationStatus == 2">
					AND reservation_status = 2
				</if>
			</if>
			<if test="isApply == 1">
				sr.reservation_status = #{reservationStatus}
				AND sr.team_id_taker = #{teamIdTaker}
			</if>
		</where>
	</select>
	
	<!-- M003: 매치검색 -->
	<select id="searchMatchByFilter" parameterType="filter" resultMap="searchRM">
		<include refid="showSearchFactorBasic"/>,
		<include refid="showSearchFactorApplied"/>
		<include refid="showSearchJoinBasic"/>
		<include refid="showSearchJoinApplied"/>
		<where>
		m.start_time > sysdate() 
			<!-- 경기일 -->
			<if test="date != null">
				AND m.start_time LIKE "${date}%"
			</if>
			<!-- 경기일시 -->
			<if test="dateTime1 != null or dateTime1 != null">
				AND ( 
				#{dateTime1} between m.start_time and date_add(m.start_time, interval m.duration hour)
				OR
				#{dateTime2} between m.start_time and date_add(m.start_time, interval m.duration hour)
				)
			</if>
			<!-- 경기장 주소 -->
			<if test="stadiumAddress != null">
				AND m.stadium_address LIKE "${stadiumAddress}%"
			</if>
			<!-- 경기장 이름 -->
			<if test="stadiumName != null">
				AND m.stadium_name LIKE "%${stadiumName}%"
			</if>
			<!-- 경기 타입 -->
			<if test="matchType != null">
				AND m.match_type = #{matchType}
			</if>
			<!-- 경기장 타입 -->
			<if test="stadiumType != null">
				AND m.stadium_type = #{stadiumType}
			</if>
			<!-- 비용유무 -->
			<if test="costType == -1">
			</if>
			<if test="costType == 0">
				AND m.cost = #{costType}
			</if>
			<if test="costType == 1">
				AND m.cost > 0
			</if>
		</where>
		<!-- 정렬 -->
		<!-- 최신순 -->
		<if test="order == 0">
			ORDER BY s.search_reg_date DESC
		</if>
		<!-- 실력순 -->
		<if test="order == 1">
			ORDER BY t4.team_ability DESC
		</if>
		<!-- 매너순 -->
		<if test="order == 2">
			ORDER BY t4.team_manner DESC
		</if>
	</select>
	
	<!-- M004: 인원파악 신청 -->
	<insert id="doApplySearch" parameterType="searchReservation">
		INSERT INTO 
		search_reservation(search_id, team_id_taker, team_member_id, reservation_status)
		VALUES(#{searchId},#{teamTaker.teamId},#{teamMember.teamMemberId}, 0)
	</insert>
	
	<!-- M005: 매치글 삭제 -->
	<delete id="deleteSearch" parameterType="integer">
		DELETE FROM search WHERE search_id = #{value} 
	</delete>
	
	<!-- M006: 매치글 끌어올리기 -->
	<update id="renewSearch" parameterType="integer">
		UPDATE search
		SET search_reg_date = sysdate()
		WHERE search_id = #{value}
	</update>
	
	<!-- M007: 매치 신청글 단계 수정 -->
	<update id="updateResStatus" parameterType="searchReservation">
		UPDATE search_reservation
		SET reservation_status = #{reservationStatus}
		WHERE search_id = #{searchId}
		AND team_id_taker = #{teamTaker.teamId}
	</update>
	
	<!--M008: 인원파악 마감 시간 됐을 때 매치 성공했는지 출력 -->
	<select id="checkSearchSuccessById" parameterType="hashMap" resultType="integer">
		SELECT reservation_status
		FROM search_reservation
		WHERE search_id = #{searchId}
		AND team_id_taker = #{teamTaker.teamId} 
	</select>
	
	<!-- M009: 인원파악취소 -->
	<delete id="deleteSeachRes" parameterType="hashMap">
		DELETE FROM search_reservation 
		WHERE search_id = #{searchId}
		AND team_id_taker = #{teamTakerId}
	</delete>
	
	<!-- M010: 체크를 위한 정보 가져오가 -->
	<select id="checkMinNum" parameterType="hashMap" resultType="attendance">
		SELECT
		s.search_id,  s.min_number, v.total_member, v.total_friend, sr.reservation_status
		FROM search s
		JOIN (
			SELECT 
			distinct v.vote_match_id, match_schedule_id,
			count(vr.team_member_id) total_member,
			count(vr.email) total_friend
			from vote_match v
			left outer join vote_match_result vr
			on v.vote_match_id = vr.vote_match_id
			where v.vote_match_id = #{voteMatchId}
			group by v.team_id
		) v
		ON s.match_schedule_id = v.match_schedule_id
		join search_reservation sr
		on s.search_id = sr.search_id
		where s.match_schedule_id = #{matchScheduleId}
		and sr.team_id_taker = #{takerTeamId}
	</select>
	<!-- M011: 해당 신청 매치 상태 완료로 변경 -->
	<update id="completeSearch" parameterType="hashMap">
		UPDATE search_reservation
		SET reservation_status = 2
		WHERE search_id = #{searchId}
		AND team_id_taker = #{takerTeamId}
	</update>
	<!-- M012: 나머지 신청 매치 상태 실패로 변경 -->
	<update id="failSearch" parameterType="hashMap">
		UPDATE search_reservation
		SET reservation_status = -1
		WHERE search_id = #{searchId}
		AND team_id_taker != #{takerTeamId}
	</update>
	<!-- M013: 매치글 수정하기 -->
	<update id="updateSearch" parameterType="search">
		UPDATE search
		SET
		search_reg_date = sysdate(),
		waiting_time = #{waitingTime},
		min_number = #{minNumber},
		due_date = #{dueDate},
		content = #{content}
		WHERE search_id = #{searchId};
	</update>
	
	
</mapper>